{"version":3,"file":"static/js/186.d0fcf766.chunk.js","mappings":"8LA6BA,UAzBgB,WACd,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GAChBO,KAAKH,EACP,GAAE,CAACJ,KAGF,2BACyB,KAAb,OAAPG,QAAO,IAAPA,OAAA,EAAAA,EAASK,UACN,oEAGLL,EAAQM,KAAI,SAAAC,GAAM,OACjB,qCACaA,EAAOC,QAChB,uBAAID,EAAOE,YAFNF,EAAOV,GADC,MAQxB,C,+LCxBDa,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAAOC,EAAP,oDAAyCC,EAAzC,gCACRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GADpC,cACrBC,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,qDAKbC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCO,EADtC,+BAEjBJ,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKC,MALmB,2CAAH,wDAQjBG,EAAc,mCAAG,WAAOtB,GAAP,8FAAWuB,EAAX,+BAA4B,GAAIN,EAAhC,gCACTJ,EAAAA,EAAAA,IAAA,gBACRb,GADQ,OACHuB,EADG,oBACuBT,EADvB,mBAEjBG,GAH0B,cACtBC,EADsB,yBAKrBA,EAAKC,MALgB,2CAAH,sDAQdK,EAAa,mCAAG,WAAOC,GAAP,uFAENZ,EAAAA,EAAAA,IAAA,gBACRY,EADQ,4BACmBX,EADnB,oBAFM,cAEnBI,EAFmB,yBAKlBA,EAAKC,KAAKO,MALQ,2CAAH,sDASbpB,EAAgB,mCAAG,WAAOmB,GAAP,uFAEXZ,EAAAA,EAAAA,IAAA,gBACRY,EADQ,4BACmBX,EADnB,oBAFW,cAExBI,EAFwB,yBAKvBA,EAAKC,KAAKQ,SALa,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/apiService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { fetchReviewsInfo } from '../../services/apiService';\n\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchReviewsInfo(id)\n    .then(setReviews);\n  }, [id]);\n\n  return (\n    <div>\n        {reviews?.length === 0 && (\n            <p>We don't have any reviews for this movie</p>\n        )}\n      \n      {reviews.map(review => (\n        <li key={review.id}>\n            Author: {review.author}\n            <p>{review.content}</p>\n        </li>\n      ))}\n    </div>\n  );\n};\n\n\nexport default Reviews","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '4019d270e5fd1fc6ed3208efae0ca971';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`, options) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async (movieId) => {\n\n    const resp = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n    return resp.data.cast\n  \n}\n\nexport const fetchReviewsInfo = async (movieId) => {\n\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results\n\n\n}\n"],"names":["id","useParams","useState","reviews","setReviews","useEffect","fetchReviewsInfo","then","length","map","review","author","content","axios","apiKey","fetchDayTrend","endpoints","options","resp","data","fetchMovieByQuery","query","fetchMovieById","detailEndpoint","fetchCastInfo","movieId","cast","results"],"sourceRoot":""}