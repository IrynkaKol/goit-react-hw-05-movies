{"version":3,"file":"static/js/415.535d38a6.chunk.js","mappings":"oMAGaA,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CACLC,KAAMP,GAHV,SAMGG,EAAMK,SAPFL,EAAME,GADA,KActB,C,yGCkBD,UAnCc,WACZ,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAA+BD,EAAAA,EAAAA,WAAS,GAAxC,eAAME,EAAN,KAAiBC,EAAjB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,gHAE2BC,EAAAA,EAAAA,MAF3B,gBAEUC,EAFV,EAEUA,QACPL,EAAUK,GAHb,gDAKGC,QAAQC,IAAR,MALH,yBAOGL,GAAW,GAPd,2EAAD,EAUD,GAAE,IAEAD,GAEL,0BACE,0CAOE,4BACE,kCACA,SAAC,IAAD,CAAYZ,OAAQA,MAGzB,C,+LClCDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFL,EAAa,mCAAG,2GAAOM,EAAP,oDAAyCC,EAAzC,gCACRH,EAAAA,EAAAA,IAAA,UAAaE,EAAb,oBAAkCD,GAAUE,GADpC,cACrBC,EADqB,yBAEpBA,EAAKC,MAFe,2CAAH,qDAKbC,EAAiB,mCAAG,WAAOC,EAAOJ,GAAd,uFACZH,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBJ,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKC,MALmB,2CAAH,wDAQjBG,EAAc,mCAAG,WAAOrB,GAAP,8FAAWsB,EAAX,+BAA4B,GAAIN,EAAhC,gCACTH,EAAAA,EAAAA,IAAA,gBACRb,GADQ,OACHsB,EADG,oBACuBR,EADvB,mBAEjBE,GAH0B,cACtBC,EADsB,yBAKrBA,EAAKC,MALgB,2CAAH,sDAQdK,EAAa,mCAAG,WAAOC,GAAP,uFAENX,EAAAA,EAAAA,IAAA,gBACRW,EADQ,4BACmBV,EADnB,oBAFM,cAEnBG,EAFmB,yBAKlBA,EAAKC,KAAKO,MALQ,2CAAH,sDASbC,EAAgB,mCAAG,WAAOF,GAAP,uFAEXX,EAAAA,EAAAA,IAAA,gBACRW,EADQ,4BACmBV,EADnB,oBAFW,cAExBG,EAFwB,yBAKvBA,EAAKC,KAAKR,SALa,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/apiService.js"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink\n            to={`/movies/${movie.id}`}\n            state={{\n              from: location,\n            }}\n          >\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { fetchDayTrend } from '../services/apiService';\nimport { MoviesList } from '../components/MoviesList/MoviesList';\n\n const Home = () => {\n  const [movies, setMovies] = useState([]);\n  const[isLoading, setLoading] = useState(true)\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const {results} = await fetchDayTrend();\n        setMovies(results); //results деструктуризація із resp.data\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setLoading(false)\n      }\n    })();\n  }, []);\n\n  if(isLoading) {\n    return (\n<div>\n  <h1>Loading...</h1>\n</div>\n    )\n\n  }\n\n  return (\n    <div>\n      <h1>Home</h1>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\n\nexport default Home","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '4019d270e5fd1fc6ed3208efae0ca971';\n\nexport const fetchDayTrend = async (endpoints = `trending/movie/day`, options) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async (movieId) => {\n\n    const resp = await axios.get(\n      `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n    );\n    return resp.data.cast\n  \n}\n\nexport const fetchReviewsInfo = async (movieId) => {\n\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results\n\n\n}\n"],"names":["MoviesList","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","isLoading","setLoading","useEffect","fetchDayTrend","results","console","log","axios","apiKey","endpoints","options","resp","data","fetchMovieByQuery","query","fetchMovieById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo"],"sourceRoot":""}